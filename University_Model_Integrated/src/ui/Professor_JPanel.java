/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui;

import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.Course;
import model.CourseHistory;
import model.Professor;

/**
 *
 * @author RUTUJA
 */
public class Professor_JPanel extends javax.swing.JPanel {

    /**
     * Creates new form Professor_JPanel
     */
    CourseHistory coursedetails;
    Professor professor;
    Course course;
    CourseHistory courseSpringdetails;
     

    public Professor_JPanel(CourseHistory coursedetails, Professor professor, CourseHistory courseSpringdetails) {
        initComponents();
        //  initComponents();
        termComboBox.setSelectedItem(null);
        this.coursedetails = coursedetails;
        this.professor = professor;
        this.courseSpringdetails=courseSpringdetails;
        cbxemployee.setSelectedItem(null);
        cbxTerms.setSelectedItem(null);
        // populateFallTable();
        populateFallAllCoursesTable();
        //juserloginpanel.setVisible(false);
        //tableSetSize();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tabEmployerFeedback = new javax.swing.JTabbedPane();
        CreateCourseJPanel = new javax.swing.JPanel();
        lblCreateCourse = new javax.swing.JLabel();
        lblCourseTitle = new javax.swing.JLabel();
        lblSubjectDescription = new javax.swing.JLabel();
        lblCourseNo = new javax.swing.JLabel();
        lblSection = new javax.swing.JLabel();
        lblLanguage = new javax.swing.JLabel();
        lblHour = new javax.swing.JLabel();
        lblCRN = new javax.swing.JLabel();
        lblProfessorName = new javax.swing.JLabel();
        lblMeetingTimings = new javax.swing.JLabel();
        lblCampus = new javax.swing.JLabel();
        lblRemoteOffline = new javax.swing.JLabel();
        txttitlesearch = new javax.swing.JTextField();
        txtsubdescription = new javax.swing.JTextField();
        txtcoursenumber = new javax.swing.JTextField();
        txtsectionsearch = new javax.swing.JTextField();
        txtlangaugesearch = new javax.swing.JTextField();
        txthoursearch = new javax.swing.JTextField();
        txtcrnsearch = new javax.swing.JTextField();
        txtinstructorsearch = new javax.swing.JTextField();
        txtmeetingtimes = new javax.swing.JTextField();
        txtcampussearch = new javax.swing.JTextField();
        txtonlineremotesearch = new javax.swing.JTextField();
        btnCreateCourse = new javax.swing.JButton();
        termlbl = new javax.swing.JLabel();
        termComboBox = new javax.swing.JComboBox<>();
        btnBack2 = new javax.swing.JButton();
        GradesJPanel = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        allCoursesTable = new javax.swing.JTable();
        btnRefresh = new javax.swing.JButton();
        lblTermsOffered1 = new javax.swing.JLabel();
        cbxTerms2 = new javax.swing.JComboBox<>();
        ViewCourseJPanel = new javax.swing.JPanel();
        lblTermsOffered = new javax.swing.JLabel();
        cbxTerms = new javax.swing.JComboBox<>();
        lblViewCourse = new javax.swing.JLabel();
        txtSearchCRN = new javax.swing.JTextField();
        btnSearch = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        courseRegisterTable = new javax.swing.JTable();
        btnRefresh1 = new javax.swing.JButton();
        lblTxtSearch = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtcrnsearch1 = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        txtonlineremotesearch1 = new javax.swing.JTextField();
        lblTxtSubDesc = new javax.swing.JLabel();
        lblMeetingTime = new javax.swing.JLabel();
        txtMeetingTime = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        employerfeedback_prof = new javax.swing.JTable();
        lblTermsOffered2 = new javax.swing.JLabel();
        cbxemployee = new javax.swing.JComboBox<>();

        lblCreateCourse.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblCreateCourse.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblCreateCourse.setText("Create Course");

        lblCourseTitle.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        lblCourseTitle.setText("Course Title");

        lblSubjectDescription.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        lblSubjectDescription.setText("Subject Description :");

        lblCourseNo.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        lblCourseNo.setText("Course Number :");

        lblSection.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        lblSection.setText("Section :");

        lblLanguage.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        lblLanguage.setText("Language :");

        lblHour.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        lblHour.setText("Hour :");

        lblCRN.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        lblCRN.setText("CRN :");

        lblProfessorName.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        lblProfessorName.setText("Professor Name");

        lblMeetingTimings.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        lblMeetingTimings.setText("Meeting Times :");

        lblCampus.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        lblCampus.setText("Campus :");

        lblRemoteOffline.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        lblRemoteOffline.setText("Remote/Offline:");

        txttitlesearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txttitlesearchActionPerformed(evt);
            }
        });

        btnCreateCourse.setBackground(new java.awt.Color(0, 0, 0));
        btnCreateCourse.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        btnCreateCourse.setForeground(new java.awt.Color(204, 204, 204));
        btnCreateCourse.setText("Create Course");
        btnCreateCourse.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnCreateCourse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateCourseActionPerformed(evt);
            }
        });

        termlbl.setForeground(new java.awt.Color(153, 153, 153));
        termlbl.setText("TERMS OPEN FOR REGISTRATION");

        termComboBox.setFont(new java.awt.Font("Lucida Grande", 0, 13)); // NOI18N
        termComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Fall 2023 Semester", "Spring 2024 Semester" }));
        termComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                termComboBoxActionPerformed(evt);
            }
        });

        btnBack2.setBackground(new java.awt.Color(0, 0, 0));
        btnBack2.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        btnBack2.setForeground(new java.awt.Color(204, 204, 204));
        btnBack2.setText("Back");
        btnBack2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBack2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout CreateCourseJPanelLayout = new javax.swing.GroupLayout(CreateCourseJPanel);
        CreateCourseJPanel.setLayout(CreateCourseJPanelLayout);
        CreateCourseJPanelLayout.setHorizontalGroup(
            CreateCourseJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CreateCourseJPanelLayout.createSequentialGroup()
                .addGroup(CreateCourseJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(CreateCourseJPanelLayout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(lblCreateCourse, javax.swing.GroupLayout.PREFERRED_SIZE, 1037, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(CreateCourseJPanelLayout.createSequentialGroup()
                        .addGap(122, 122, 122)
                        .addComponent(termlbl)
                        .addGap(18, 18, 18)
                        .addComponent(termComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(CreateCourseJPanelLayout.createSequentialGroup()
                        .addGap(175, 175, 175)
                        .addGroup(CreateCourseJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblCourseTitle)
                            .addComponent(lblSubjectDescription)
                            .addComponent(lblCourseNo)
                            .addComponent(lblSection)
                            .addComponent(lblLanguage)
                            .addComponent(lblHour)
                            .addComponent(lblCRN)
                            .addComponent(lblProfessorName)
                            .addComponent(lblMeetingTimings)
                            .addComponent(lblCampus)
                            .addComponent(lblRemoteOffline)
                            .addComponent(btnBack2, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(158, 158, 158)
                        .addGroup(CreateCourseJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(txtcampussearch, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 391, Short.MAX_VALUE)
                            .addComponent(txtcrnsearch, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txthoursearch, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtlangaugesearch, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtsectionsearch, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtcoursenumber, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtsubdescription, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txttitlesearch, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtinstructorsearch)
                            .addComponent(txtmeetingtimes)
                            .addComponent(txtonlineremotesearch)
                            .addComponent(btnCreateCourse, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(52, Short.MAX_VALUE))
        );
        CreateCourseJPanelLayout.setVerticalGroup(
            CreateCourseJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CreateCourseJPanelLayout.createSequentialGroup()
                .addGroup(CreateCourseJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(CreateCourseJPanelLayout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(termComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, CreateCourseJPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(termlbl)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblCreateCourse)
                .addGap(18, 18, 18)
                .addGroup(CreateCourseJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCourseTitle)
                    .addComponent(txttitlesearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(CreateCourseJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSubjectDescription)
                    .addComponent(txtsubdescription, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(CreateCourseJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCourseNo)
                    .addComponent(txtcoursenumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(CreateCourseJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSection)
                    .addComponent(txtsectionsearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(CreateCourseJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblLanguage)
                    .addComponent(txtlangaugesearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(CreateCourseJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblHour)
                    .addComponent(txthoursearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(CreateCourseJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblCRN)
                    .addComponent(txtcrnsearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(CreateCourseJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblProfessorName)
                    .addComponent(txtinstructorsearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(CreateCourseJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblMeetingTimings)
                    .addComponent(txtmeetingtimes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(CreateCourseJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCampus)
                    .addComponent(txtcampussearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(CreateCourseJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblRemoteOffline)
                    .addComponent(txtonlineremotesearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(CreateCourseJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCreateCourse, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBack2, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(38, Short.MAX_VALUE))
        );

        tabEmployerFeedback.addTab("Create Course", CreateCourseJPanel);

        allCoursesTable.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        allCoursesTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Title", "Subject Description", "Course Number", "Section", "Language", "Hour", "CRN", "Instructor", "Meeting Times", "Campus", "Remote/Offline"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        allCoursesTable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        allCoursesTable.setMinimumSize(new java.awt.Dimension(200, 200));
        jScrollPane2.setViewportView(allCoursesTable);

        btnRefresh.setBackground(new java.awt.Color(153, 153, 153));
        btnRefresh.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        btnRefresh.setText("Refresh");

        lblTermsOffered1.setForeground(new java.awt.Color(153, 153, 153));
        lblTermsOffered1.setText("TERMS OFFERED");

        cbxTerms2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Fall 2023 Semester", "Spring 2024 Semester" }));
        cbxTerms2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxTerms2ActionPerformed(evt);
            }
        });
        cbxTerms2.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                cbxTerms2PropertyChange(evt);
            }
        });

        javax.swing.GroupLayout GradesJPanelLayout = new javax.swing.GroupLayout(GradesJPanel);
        GradesJPanel.setLayout(GradesJPanelLayout);
        GradesJPanelLayout.setHorizontalGroup(
            GradesJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(GradesJPanelLayout.createSequentialGroup()
                .addGroup(GradesJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(GradesJPanelLayout.createSequentialGroup()
                        .addGap(202, 202, 202)
                        .addComponent(lblTermsOffered1)
                        .addGap(18, 18, 18)
                        .addComponent(cbxTerms2, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(GradesJPanelLayout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(GradesJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 826, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnRefresh, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(260, Short.MAX_VALUE))
        );
        GradesJPanelLayout.setVerticalGroup(
            GradesJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(GradesJPanelLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(GradesJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTermsOffered1)
                    .addComponent(cbxTerms2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnRefresh, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(345, Short.MAX_VALUE))
        );

        tabEmployerFeedback.addTab("View Course", GradesJPanel);

        lblTermsOffered.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        lblTermsOffered.setForeground(new java.awt.Color(153, 153, 153));
        lblTermsOffered.setText("TERMS OFFERED");

        cbxTerms.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Fall 2023 Semester", "Spring 2024 Semester" }));
        cbxTerms.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxTermsActionPerformed(evt);
            }
        });
        cbxTerms.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                cbxTermsPropertyChange(evt);
            }
        });

        lblViewCourse.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblViewCourse.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblViewCourse.setText("View Course");

        btnSearch.setBackground(new java.awt.Color(51, 51, 51));
        btnSearch.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        btnSearch.setForeground(new java.awt.Color(153, 153, 153));
        btnSearch.setText("Search");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        btnUpdate.setBackground(new java.awt.Color(51, 51, 51));
        btnUpdate.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        btnUpdate.setForeground(new java.awt.Color(153, 153, 153));
        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        courseRegisterTable.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        courseRegisterTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Title", "Subject Description", "Course Number", "Section", "Language", "Hour", "CRN", "Instructor", "Meeting Times", "Campus", "Remote/Offline"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        courseRegisterTable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jScrollPane1.setViewportView(courseRegisterTable);

        btnRefresh1.setBackground(new java.awt.Color(51, 51, 51));
        btnRefresh1.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        btnRefresh1.setForeground(new java.awt.Color(153, 153, 153));
        btnRefresh1.setText("Refresh");

        lblTxtSearch.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        lblTxtSearch.setText("Title Searched by User");

        jLabel8.setFont(new java.awt.Font("Helvetica Neue", 0, 12)); // NOI18N
        jLabel8.setText("CRN :");

        txtcrnsearch1.setFont(new java.awt.Font("Helvetica Neue", 0, 12)); // NOI18N
        txtcrnsearch1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtcrnsearch1ActionPerformed(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Helvetica Neue", 0, 12)); // NOI18N
        jLabel12.setText("Online/Remote :");

        txtonlineremotesearch1.setFont(new java.awt.Font("Helvetica Neue", 0, 12)); // NOI18N

        lblTxtSubDesc.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        lblTxtSubDesc.setText("Subject Description ");

        lblMeetingTime.setText("Meeting Time:");

        javax.swing.GroupLayout ViewCourseJPanelLayout = new javax.swing.GroupLayout(ViewCourseJPanel);
        ViewCourseJPanel.setLayout(ViewCourseJPanelLayout);
        ViewCourseJPanelLayout.setHorizontalGroup(
            ViewCourseJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ViewCourseJPanelLayout.createSequentialGroup()
                .addGroup(ViewCourseJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ViewCourseJPanelLayout.createSequentialGroup()
                        .addGap(207, 207, 207)
                        .addComponent(lblTermsOffered, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbxTerms, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(ViewCourseJPanelLayout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(ViewCourseJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(ViewCourseJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, ViewCourseJPanelLayout.createSequentialGroup()
                                    .addComponent(txtSearchCRN, javax.swing.GroupLayout.PREFERRED_SIZE, 304, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(btnRefresh1, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(ViewCourseJPanelLayout.createSequentialGroup()
                                    .addGroup(ViewCourseJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(ViewCourseJPanelLayout.createSequentialGroup()
                                            .addGap(169, 169, 169)
                                            .addComponent(lblTxtSearch))
                                        .addComponent(jLabel12, javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(lblMeetingTime, javax.swing.GroupLayout.Alignment.TRAILING))
                                    .addGap(46, 46, 46)
                                    .addGroup(ViewCourseJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(txtcrnsearch1, javax.swing.GroupLayout.DEFAULT_SIZE, 248, Short.MAX_VALUE)
                                        .addComponent(txtonlineremotesearch1)
                                        .addComponent(txtMeetingTime)
                                        .addComponent(lblTxtSubDesc)
                                        .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 834, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(ViewCourseJPanelLayout.createSequentialGroup()
                                .addGap(108, 108, 108)
                                .addComponent(lblViewCourse, javax.swing.GroupLayout.PREFERRED_SIZE, 632, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(244, Short.MAX_VALUE))
        );
        ViewCourseJPanelLayout.setVerticalGroup(
            ViewCourseJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ViewCourseJPanelLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(lblViewCourse)
                .addGap(18, 18, 18)
                .addGroup(ViewCourseJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbxTerms, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblTermsOffered))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addGroup(ViewCourseJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnRefresh1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtSearchCRN, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addGroup(ViewCourseJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTxtSearch)
                    .addComponent(lblTxtSubDesc, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ViewCourseJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtcrnsearch1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ViewCourseJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtonlineremotesearch1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(ViewCourseJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtMeetingTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblMeetingTime))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(186, Short.MAX_VALUE))
        );

        tabEmployerFeedback.addTab("My Courses", ViewCourseJPanel);

        employerfeedback_prof.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        employerfeedback_prof.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Title", "Subject Description", "Course Number", "Section", "Language", "Hour", "CRN", "Instructor", "Meeting Times", "Campus", "Online/Remote", "Employer Rating", "Student's Rating"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        employerfeedback_prof.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        employerfeedback_prof.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                employerfeedback_profMouseClicked(evt);
            }
        });
        employerfeedback_prof.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                employerfeedback_profKeyPressed(evt);
            }
        });
        jScrollPane4.setViewportView(employerfeedback_prof);

        lblTermsOffered2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblTermsOffered2.setForeground(new java.awt.Color(153, 153, 153));
        lblTermsOffered2.setText("TERMS OFFERED :");

        cbxemployee.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Fall 2023 Semester", "Spring 2024 Semester" }));
        cbxemployee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxemployeeActionPerformed(evt);
            }
        });
        cbxemployee.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                cbxemployeePropertyChange(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane4)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(136, 136, 136)
                .addComponent(lblTermsOffered2, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbxemployee, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(649, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbxemployee, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblTermsOffered2))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(311, Short.MAX_VALUE))
        );

        tabEmployerFeedback.addTab("Employer Feedback", jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tabEmployerFeedback)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tabEmployerFeedback)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void cbxTermsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxTermsActionPerformed
        // TODO add your handling code here:
        //popTable();
        int index = cbxTerms.getSelectedIndex();
        if (index == 0) {
            populateFallTable();
            //popTable();
        } else if (index == 1) {
            populateSpringTable();
        }
    }//GEN-LAST:event_cbxTermsActionPerformed

    private void cbxTermsPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_cbxTermsPropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_cbxTermsPropertyChange

    private void btnCreateCourseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateCourseActionPerformed
        // TODO add your handling code here:
        String title = txttitlesearch.getText();
        String subjectDescription = txtsubdescription.getText();
        int courseNumber = Integer.parseInt(txtcoursenumber.getText());
        String section = txtsectionsearch.getText();
        String language = txtlangaugesearch.getText();
        int hours = Integer.parseInt(txthoursearch.getText());
        int crn = Integer.parseInt(txtcrnsearch.getText());
        String instructor = txtinstructorsearch.getText();
        String meetingTimes = txtmeetingtimes.getText();
        String campus = txtcampussearch.getText();
        String onlineremote = txtonlineremotesearch.getText();

        Course cs = new Course();

        if (termComboBox.getSelectedIndex() == 0) {
            cs.setTitle(title);
            cs.setSubjectDescription(subjectDescription);
            cs.setcourseNumber(courseNumber);
            cs.setSection(section);
            cs.setLanguage(language);
            cs.setHours(hours);
            cs.setCrn(crn);
            cs.setInstructor(instructor);
            cs.setMeetingTimes(meetingTimes);
            cs.setCampus(campus);
            cs.setOnlineremote(onlineremote);
            cs.setTerm("Fall 2023");
            coursedetails.addCourse(cs);
            professor.addCourse(crn);
            JOptionPane.showMessageDialog(this, "Course added in you semester for Fall 2023");
            txttitlesearch.setText("");
            txtsubdescription.setText("");
            txtcoursenumber.setText("");
            txtsectionsearch.setText("");
            txtlangaugesearch.setText("");
            txthoursearch.setText("");
            txtcrnsearch.setText("");
            txtinstructorsearch.setText("");
            txtmeetingtimes.setText("");
            txtcampussearch.setText("");
            txtonlineremotesearch.setText("");
        } else if (termComboBox.getSelectedIndex() == 1) {
            cs.setTitle(title);
            cs.setSubjectDescription(subjectDescription);
            cs.setcourseNumber(courseNumber);
            cs.setSection(section);
            cs.setLanguage(language);
            cs.setHours(hours);
            cs.setCrn(crn);
            cs.setInstructor(instructor);
            cs.setMeetingTimes(meetingTimes);
            cs.setCampus(campus);
            cs.setOnlineremote(onlineremote);
            cs.setTerm("Spring 2024");
            coursedetails.addCourse(cs);
            professor.addCourse(crn);
            JOptionPane.showMessageDialog(this, "Course added in you semester for Spring 2024");
            txttitlesearch.setText("");
            txtsubdescription.setText("");
            txtcoursenumber.setText("");
            txtsectionsearch.setText("");
            txtlangaugesearch.setText("");
            txthoursearch.setText("");
            txtcrnsearch.setText("");
            txtinstructorsearch.setText("");
            txtmeetingtimes.setText("");
            txtcampussearch.setText("");
            txtonlineremotesearch.setText("");

        } else {
            JOptionPane.showMessageDialog(this, "Course added in you semester for Spring 2024");
        }
    }//GEN-LAST:event_btnCreateCourseActionPerformed

    private void termComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_termComboBoxActionPerformed
        // TODO add your handling code here:

        //String selectedValue = termComboBox.getSelectedItem().toString();
        //    if ("Value 1".equals(selectedValue)) {
        //        populateFallTable();
        //    } else if ("Value 2".equals(selectedValue)) {
        //        //messageLabel.setText("You selected Value 2!");
        //    } else if ("Value 3".equals(selectedValue)) {
        //        //messageLabel.setText("You selected Value 3!");
        //    } else {
        //        //messageLabel.setText("");
        //    }
    }//GEN-LAST:event_termComboBoxActionPerformed

    private void btnBack2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBack2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnBack2ActionPerformed

    private void txttitlesearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txttitlesearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txttitlesearchActionPerformed

    private void cbxTerms2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxTerms2ActionPerformed
        // TODO add your handling code here:
        int index = cbxTerms2.getSelectedIndex();
        if (index == 0) {
            populateFallAllCoursesTable();
        } else if (index == 1) {
            populateSpringAllCoursesTable();
        }
    }//GEN-LAST:event_cbxTerms2ActionPerformed

    private void cbxTerms2PropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_cbxTerms2PropertyChange
        // TODO add your handling code here:
        int index = cbxTerms2.getSelectedIndex();
        if (index == 0) {
            populateFallAllCoursesTable();
        } else if (index == 1) {
            populateSpringAllCoursesTable();
        }
    }//GEN-LAST:event_cbxTerms2PropertyChange

    private void txtcrnsearch1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtcrnsearch1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtcrnsearch1ActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        // TODO add your hand
        // System.out.printnln(professor.getCourseCRNS());

        if (professor.getCourseCRNS().contains(Integer.parseInt(txtSearchCRN.getText()))) {
            this.course = coursedetails.searchByCRN(Integer.parseInt(txtSearchCRN.getText()));
            if (course == null) {
                JOptionPane.showMessageDialog(this, "Course CRN is no found!");
            } else {
                lblTxtSearch.setText(course.getTitle());
                lblTxtSubDesc.setText(course.getSubjectDescription());
                txtcrnsearch1.setText(Integer.toString(course.getCrn()));
                txtonlineremotesearch1.setText(course.getOnlineremote());
                txtMeetingTime.setText(course.getMeetingTimes());
            }
        } else {
            JOptionPane.showMessageDialog(this, "Course CRN is not part of your courses!");
        }
    }//GEN-LAST:event_btnSearchActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        this.course.setCrn(Integer.parseInt(txtcrnsearch1.getText()));
        this.course.setMeetingTimes(txtMeetingTime.getText());
        this.course.setOnlineremote(txtonlineremotesearch1.getText());
        JOptionPane.showMessageDialog(this, "The course details have been updated!");
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void employerfeedback_profMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_employerfeedback_profMouseClicked
        // TODO add your handling code here:
        
    }//GEN-LAST:event_employerfeedback_profMouseClicked

    private void employerfeedback_profKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_employerfeedback_profKeyPressed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_employerfeedback_profKeyPressed

    private void cbxemployeeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxemployeeActionPerformed
        // TODO add your handling code here:
        int index = cbxTerms.getSelectedIndex();
        if (index == 0) {
            populateFallEmployeeRatingTable();
            //popTable();
        } else if (index == 1) {
            populateSpringEmployeeRatingTable();
        }
    }//GEN-LAST:event_cbxemployeeActionPerformed

    private void cbxemployeePropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_cbxemployeePropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_cbxemployeePropertyChange
    private void populateFallTable() {

        DefaultTableModel model = (DefaultTableModel) courseRegisterTable.getModel();
        model.setRowCount(0);
        System.out.println(professor.getCourseCRNS());
        for (Course vs : coursedetails.getCourseList()) {
            for (int crn : professor.getCourseCRNS()) {
                if (crn == vs.getCrn() & vs.getTerm().equals("Fall 2023")) {
                    System.out.println("True");
                    Object[] row = new Object[13];
                    row[0] = vs;
                    row[1] = vs.getSubjectDescription();
                    row[2] = vs.getcourseNumber();
                    row[3] = vs.getSection();
                    row[4] = vs.getLanguage();
                    row[5] = vs.getHours();
                    row[6] = vs.getCrn();
                    row[7] = vs.getInstructor();
                    row[8] = vs.getMeetingTimes();
                    row[9] = vs.getCampus();
                    row[10] = vs.getOnlineremote();
                    model.addRow(row);
                    break;

                }

            }
        }

    }

    private void populateSpringTable() {

        DefaultTableModel model = (DefaultTableModel) courseRegisterTable.getModel();
        model.setRowCount(0);
//        System.out.println(professor.getCourseCRNS());
        for (Course vs : coursedetails.getCourseList()) {
            for (int crn : professor.getCourseCRNS()) {
                if (crn == vs.getCrn() & vs.getTerm().equals("Spring 2024")) {
                    System.out.println("True");
                    Object[] row = new Object[13];
                    row[0] = vs;
                    row[1] = vs.getSubjectDescription();
                    row[2] = vs.getcourseNumber();
                    row[3] = vs.getSection();
                    row[4] = vs.getLanguage();
                    row[5] = vs.getHours();
                    row[6] = vs.getCrn();
                    row[7] = vs.getInstructor();
                    row[8] = vs.getMeetingTimes();
                    row[9] = vs.getCampus();
                    row[10] = vs.getOnlineremote();
                    model.addRow(row);
                    break;

                }

            }
        }

    }

    private void populateFallAllCoursesTable() {

        DefaultTableModel model = (DefaultTableModel) allCoursesTable.getModel();
        model.setRowCount(0);
        for (Course vs : coursedetails.getCourseList()) {
            if (vs.getTerm().equals("Fall 2023")) {
                Object[] row = new Object[13];
                row[0] = vs;
                row[1] = vs.getSubjectDescription();
                row[2] = vs.getcourseNumber();
                row[3] = vs.getSection();
                row[4] = vs.getLanguage();
                row[5] = vs.getHours();
                row[6] = vs.getCrn();
                row[7] = vs.getInstructor();
                row[8] = vs.getMeetingTimes();
                row[9] = vs.getCampus();
                row[10] = vs.getOnlineremote();
                row[11] = vs.getEmployerrating();
                row[12] = vs.getStudentrating();

                model.addRow(row);
            }

        }
    }

    private void populateSpringAllCoursesTable() {

        DefaultTableModel model = (DefaultTableModel) allCoursesTable.getModel();
        model.setRowCount(0);
        for (Course vs : coursedetails.getCourseList()) {
            if (vs.getTerm().equals("Spring 2024")) {
                Object[] row = new Object[13];
                row[0] = vs;
                row[1] = vs.getSubjectDescription();
                row[2] = vs.getcourseNumber();
                row[3] = vs.getSection();
                row[4] = vs.getLanguage();
                row[5] = vs.getHours();
                row[6] = vs.getCrn();
                row[7] = vs.getInstructor();
                row[8] = vs.getMeetingTimes();
                row[9] = vs.getCampus();
                row[10] = vs.getOnlineremote();
                row[11] = vs.getEmployerrating();
                row[12] = vs.getStudentrating();

                model.addRow(row);
            }

        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel CreateCourseJPanel;
    private javax.swing.JPanel GradesJPanel;
    private javax.swing.JPanel ViewCourseJPanel;
    private javax.swing.JTable allCoursesTable;
    private javax.swing.JButton btnBack2;
    private javax.swing.JButton btnCreateCourse;
    private javax.swing.JButton btnRefresh;
    private javax.swing.JButton btnRefresh1;
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JComboBox<String> cbxTerms;
    private javax.swing.JComboBox<String> cbxTerms2;
    private javax.swing.JComboBox<String> cbxemployee;
    private javax.swing.JTable courseRegisterTable;
    private javax.swing.JTable employerfeedback_prof;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JLabel lblCRN;
    private javax.swing.JLabel lblCampus;
    private javax.swing.JLabel lblCourseNo;
    private javax.swing.JLabel lblCourseTitle;
    private javax.swing.JLabel lblCreateCourse;
    private javax.swing.JLabel lblHour;
    private javax.swing.JLabel lblLanguage;
    private javax.swing.JLabel lblMeetingTime;
    private javax.swing.JLabel lblMeetingTimings;
    private javax.swing.JLabel lblProfessorName;
    private javax.swing.JLabel lblRemoteOffline;
    private javax.swing.JLabel lblSection;
    private javax.swing.JLabel lblSubjectDescription;
    private javax.swing.JLabel lblTermsOffered;
    private javax.swing.JLabel lblTermsOffered1;
    private javax.swing.JLabel lblTermsOffered2;
    private javax.swing.JLabel lblTxtSearch;
    private javax.swing.JLabel lblTxtSubDesc;
    private javax.swing.JLabel lblViewCourse;
    private javax.swing.JTabbedPane tabEmployerFeedback;
    private javax.swing.JComboBox<String> termComboBox;
    private javax.swing.JLabel termlbl;
    private javax.swing.JTextField txtMeetingTime;
    private javax.swing.JTextField txtSearchCRN;
    private javax.swing.JTextField txtcampussearch;
    private javax.swing.JTextField txtcoursenumber;
    private javax.swing.JTextField txtcrnsearch;
    private javax.swing.JTextField txtcrnsearch1;
    private javax.swing.JTextField txthoursearch;
    private javax.swing.JTextField txtinstructorsearch;
    private javax.swing.JTextField txtlangaugesearch;
    private javax.swing.JTextField txtmeetingtimes;
    private javax.swing.JTextField txtonlineremotesearch;
    private javax.swing.JTextField txtonlineremotesearch1;
    private javax.swing.JTextField txtsectionsearch;
    private javax.swing.JTextField txtsubdescription;
    private javax.swing.JTextField txttitlesearch;
    // End of variables declaration//GEN-END:variables
private void populateFallEmployeeRatingTable() {
        DefaultTableModel model = (DefaultTableModel) employerfeedback_prof.getModel();
        model.setRowCount(0);
        for (Course vs : coursedetails.getCoursedetails()) {
            Object[] row = new Object[13];
            row[0] = vs;
            row[1] = vs.getSubjectDescription();
            row[2] = vs.getcourseNumber();
            row[3] = vs.getSection();
            row[4] = vs.getLanguage();
            row[5] = vs.getHours();
            row[6] = vs.getCrn();
            row[7] = vs.getInstructor();
            row[8] = vs.getMeetingTimes();
            row[9] = vs.getCampus();
            row[10] = vs.getOnlineremote();
            row[11] = vs.getEmployerrating();
            row[12] = vs.getStudentrating();

            model.addRow(row);
        }
    }

    private void populateSpringEmployeeRatingTable() {
        DefaultTableModel model = (DefaultTableModel) employerfeedback_prof.getModel();
        model.setRowCount(0);
        for (Course vs :  courseSpringdetails.getCourseSpringdetails()) {
            if (vs.getTerm().equals("Spring 2024")) {
                Object[] row = new Object[13];
                row[0] = vs;
                row[1] = vs.getSubjectDescription();
                row[2] = vs.getcourseNumber();
                row[3] = vs.getSection();
                row[4] = vs.getLanguage();
                row[5] = vs.getHours();
                row[6] = vs.getCrn();
                row[7] = vs.getInstructor();
                row[8] = vs.getMeetingTimes();
                row[9] = vs.getCampus();
                row[10] = vs.getOnlineremote();
                row[11] = vs.getEmployerrating();
                row[12] = vs.getStudentrating();

                model.addRow(row);
            }

        }
    }
}
