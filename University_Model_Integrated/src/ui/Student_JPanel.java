/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.Optional;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.Course;
import model.CourseHistory;
import model.Student;
import model.StudentCourse;
import model.StudentRecord;
import model.Transcript;
import ui.AdminJPanel;

/**
 *
 * @author yuga
 */
public class Student_JPanel extends javax.swing.JPanel {

    /**
     * Creates new form Student_JPanel
     */
    CourseHistory coursedetails;
    StudentCourse studentregisterdetails;
    StudentCourse studentSpringdetails;
    private Course course;
    StudentRecord studentRecord;
    CourseHistory courseSpringdetails;
    Transcript transcript;
    private int arraysize = 0;

    public Student_JPanel(Transcript transcript, CourseHistory coursedetails, StudentCourse studentregisterdetails, Course course, StudentRecord studentRecord, CourseHistory courseSpringdetails, StudentCourse studentSpringdetails) {
        initComponents();
        this.studentRecord = studentRecord;
        this.courseSpringdetails = courseSpringdetails;
        this.studentSpringdetails = studentSpringdetails;
        this.coursedetails = coursedetails;
        this.studentregisterdetails = studentregisterdetails;
        this.course = course;
        this.transcript = transcript;
        termComboBox.setSelectedItem(null);
        ratingComboBox.setSelectedItem(null);
        dash.setSelectedItem(null);
        juserloginpanel.setVisible(false);
        tableSetSize();
        
        graduateeligiblebtn.setEnabled(false);
        if (transcript.isGettranscript()) {
            downloaddegreebtn.setEnabled(true);
        } else {
            downloaddegreebtn.setEnabled(false);
        }
        jTabbedPane1.removeTabAt(3);
//        StudentCourse cs = new StudentCourse();
//        if (cs.size1()==1) {
//            graduateeligiblebtn.setEnabled(true);
//        } else {
//            graduateeligiblebtn.setEnabled(false);
//        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        tabPatient = new javax.swing.JPanel();
        splitWorkspace = new javax.swing.JPanel();
        termlbl = new javax.swing.JLabel();
        termComboBox = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        courseRegisterTable = new javax.swing.JTable();
        ProfessorName = new javax.swing.JLabel();
        topiclbl = new javax.swing.JLabel();
        regionlblk = new javax.swing.JLabel();
        languagelbl = new javax.swing.JLabel();
        searchprofessor = new javax.swing.JTextField();
        searchtitletxt = new javax.swing.JTextField();
        searchregion = new javax.swing.JTextField();
        searchlanguage = new javax.swing.JTextField();
        searchcoursebtn = new javax.swing.JButton();
        clearcoursebtn = new javax.swing.JButton();
        juserloginpanel = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        txttitlesearch = new javax.swing.JTextField();
        txtsubdescription = new javax.swing.JTextField();
        txtcoursenumber = new javax.swing.JTextField();
        txtsectionsearch = new javax.swing.JTextField();
        txtlangaugesearch = new javax.swing.JTextField();
        txthoursearch = new javax.swing.JTextField();
        txtcrnsearch = new javax.swing.JTextField();
        txtinstructorsearch = new javax.swing.JTextField();
        txtmeetingtimes = new javax.swing.JTextField();
        txtcampussearch = new javax.swing.JTextField();
        txtonlineremotesearch = new javax.swing.JTextField();
        txtstudentratingsearch = new javax.swing.JTextField();
        addcoursebtn = new javax.swing.JButton();
        txtemployeeratingsearch = new javax.swing.JTextField();
        tabDoctor = new javax.swing.JPanel();
        splitWorkspace1 = new javax.swing.JPanel();
        termlbl1 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        ratingtable = new javax.swing.JTable();
        jLabel31 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        jLabel37 = new javax.swing.JLabel();
        jLabel38 = new javax.swing.JLabel();
        jLabel39 = new javax.swing.JLabel();
        txtonlineremotesearch2 = new javax.swing.JTextField();
        txtcampussearch2 = new javax.swing.JTextField();
        txtinstructorsearch2 = new javax.swing.JTextField();
        txtlangaugesearch2 = new javax.swing.JTextField();
        txtsectionsearch2 = new javax.swing.JTextField();
        txtcoursenumber2 = new javax.swing.JTextField();
        txtsubdescription2 = new javax.swing.JTextField();
        txttitlesearch2 = new javax.swing.JTextField();
        jLabel30 = new javax.swing.JLabel();
        jLabel40 = new javax.swing.JLabel();
        jLabel41 = new javax.swing.JLabel();
        ratingprofessor = new javax.swing.JSlider();
        jLabel29 = new javax.swing.JLabel();
        jLabel42 = new javax.swing.JLabel();
        jLabel43 = new javax.swing.JLabel();
        jLabel44 = new javax.swing.JLabel();
        jLabel45 = new javax.swing.JLabel();
        ratingComboBox = new javax.swing.JComboBox<>();
        updaterating = new javax.swing.JButton();
        tabHospital = new javax.swing.JPanel();
        splitWorkspace2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        studentRegisteredTable = new javax.swing.JTable();
        jLabel15 = new javax.swing.JLabel();
        graduateeligiblebtn = new javax.swing.JButton();
        downloaddegreebtn = new javax.swing.JButton();
        jLabel16 = new javax.swing.JLabel();
        dash = new javax.swing.JComboBox<>();
        tabEncounters = new javax.swing.JPanel();
        splitPaneEncounter = new javax.swing.JSplitPane();
        splitNavigation3 = new javax.swing.JPanel();
        splitWorkspace3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();

        jTabbedPane1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jTabbedPane1.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        jTabbedPane1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabbedPane1MouseClicked(evt);
            }
        });
        jTabbedPane1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTabbedPane1KeyPressed(evt);
            }

            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTabbedPane1KeyReleased(evt);
            }

            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTabbedPane1KeyTyped(evt);
            }
        });

        splitWorkspace.setBackground(new java.awt.Color(204, 204, 204));
        splitWorkspace.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        termlbl.setText("TERMS OPEN FOR REGISTRATION");

        termComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[]{"Fall 2023 Semester", "Spring 2024 Semester"}));
        termComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                termComboBoxActionPerformed(evt);
            }
        });

        courseRegisterTable.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        courseRegisterTable.setModel(new javax.swing.table.DefaultTableModel(
                new Object[][]{
                    {null, null, null, null, null, null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null, null, null, null, null, null}
                },
                new String[]{
                    "Title", "Subject Description", "Course Number", "Section", "Language", "Hour", "CRN", "Instructor", "Meeting Times", "Campus", "Online/Remote", "Employer Rating", "Student's Rating"
                }
        ) {
            boolean[] canEdit = new boolean[]{
                false, false, false, false, true, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit[columnIndex];
            }
        });
        courseRegisterTable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jScrollPane1.setViewportView(courseRegisterTable);
        if (courseRegisterTable.getColumnModel().getColumnCount() > 0) {
            courseRegisterTable.getColumnModel().getColumn(0).setResizable(false);
        }

        ProfessorName.setText("Professor Name :");

        topiclbl.setText("Title :");

        regionlblk.setText("Campus :");

        languagelbl.setText("Language :");

        searchcoursebtn.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        searchcoursebtn.setText("Search");
        searchcoursebtn.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        searchcoursebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchcoursebtnActionPerformed(evt);
            }
        });

        clearcoursebtn.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        clearcoursebtn.setText("Clear");
        clearcoursebtn.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel2.setFont(new java.awt.Font("Helvetica Neue", 0, 12)); // NOI18N
        jLabel2.setText("Title :");

        jLabel3.setFont(new java.awt.Font("Helvetica Neue", 0, 12)); // NOI18N
        jLabel3.setText("Subject Description :");

        jLabel4.setFont(new java.awt.Font("Helvetica Neue", 0, 12)); // NOI18N
        jLabel4.setText("Course Number :");

        jLabel5.setFont(new java.awt.Font("Helvetica Neue", 0, 12)); // NOI18N
        jLabel5.setText("Section :");

        jLabel6.setFont(new java.awt.Font("Helvetica Neue", 0, 12)); // NOI18N
        jLabel6.setText("Language :");

        jLabel7.setFont(new java.awt.Font("Helvetica Neue", 0, 12)); // NOI18N
        jLabel7.setText("Hour :");

        jLabel8.setFont(new java.awt.Font("Helvetica Neue", 0, 12)); // NOI18N
        jLabel8.setText("CRN :");

        jLabel9.setFont(new java.awt.Font("Helvetica Neue", 0, 12)); // NOI18N
        jLabel9.setText("Instructor :");

        jLabel10.setFont(new java.awt.Font("Helvetica Neue", 0, 12)); // NOI18N
        jLabel10.setText("Meeting Times :");

        jLabel11.setFont(new java.awt.Font("Helvetica Neue", 0, 12)); // NOI18N
        jLabel11.setText("Campus :");

        jLabel12.setFont(new java.awt.Font("Helvetica Neue", 0, 12)); // NOI18N
        jLabel12.setText("Online/Remote :");

        jLabel13.setFont(new java.awt.Font("Helvetica Neue", 0, 12)); // NOI18N
        jLabel13.setText("Employee Rating :");

        jLabel14.setFont(new java.awt.Font("Helvetica Neue", 0, 12)); // NOI18N
        jLabel14.setText("Student's Rating :");

        txttitlesearch.setEditable(false);
        txttitlesearch.setFont(new java.awt.Font("Helvetica Neue", 0, 12)); // NOI18N

        txtsubdescription.setEditable(false);
        txtsubdescription.setFont(new java.awt.Font("Helvetica Neue", 0, 12)); // NOI18N

        txtcoursenumber.setEditable(false);
        txtcoursenumber.setFont(new java.awt.Font("Helvetica Neue", 0, 12)); // NOI18N

        txtsectionsearch.setEditable(false);
        txtsectionsearch.setFont(new java.awt.Font("Helvetica Neue", 0, 12)); // NOI18N

        txtlangaugesearch.setEditable(false);
        txtlangaugesearch.setFont(new java.awt.Font("Helvetica Neue", 0, 12)); // NOI18N

        txthoursearch.setEditable(false);
        txthoursearch.setFont(new java.awt.Font("Helvetica Neue", 0, 12)); // NOI18N

        txtcrnsearch.setEditable(false);
        txtcrnsearch.setFont(new java.awt.Font("Helvetica Neue", 0, 12)); // NOI18N

        txtinstructorsearch.setEditable(false);
        txtinstructorsearch.setFont(new java.awt.Font("Helvetica Neue", 0, 12)); // NOI18N

        txtmeetingtimes.setEditable(false);
        txtmeetingtimes.setFont(new java.awt.Font("Helvetica Neue", 0, 12)); // NOI18N

        txtcampussearch.setEditable(false);
        txtcampussearch.setFont(new java.awt.Font("Helvetica Neue", 0, 12)); // NOI18N

        txtonlineremotesearch.setEditable(false);
        txtonlineremotesearch.setFont(new java.awt.Font("Helvetica Neue", 0, 12)); // NOI18N

        txtstudentratingsearch.setEditable(false);
        txtstudentratingsearch.setFont(new java.awt.Font("Helvetica Neue", 0, 12)); // NOI18N

        addcoursebtn.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        addcoursebtn.setText(">>ADD");
        addcoursebtn.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        addcoursebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addcoursebtnActionPerformed(evt);
            }
        });

        txtemployeeratingsearch.setEditable(false);
        txtemployeeratingsearch.setFont(new java.awt.Font("Helvetica Neue", 0, 12)); // NOI18N

        javax.swing.GroupLayout juserloginpanelLayout = new javax.swing.GroupLayout(juserloginpanel);
        juserloginpanel.setLayout(juserloginpanelLayout);
        juserloginpanelLayout.setHorizontalGroup(
                juserloginpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(juserloginpanelLayout.createSequentialGroup()
                                .addGroup(juserloginpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(juserloginpanelLayout.createSequentialGroup()
                                                .addGap(21, 21, 21)
                                                .addGroup(juserloginpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                        .addComponent(jLabel12)
                                                        .addComponent(jLabel11)
                                                        .addComponent(jLabel9)
                                                        .addComponent(jLabel7)
                                                        .addComponent(jLabel2)
                                                        .addComponent(jLabel8)
                                                        .addComponent(jLabel10)
                                                        .addComponent(jLabel13)
                                                        .addComponent(jLabel14)))
                                        .addGroup(juserloginpanelLayout.createSequentialGroup()
                                                .addContainerGap()
                                                .addComponent(jLabel3))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, juserloginpanelLayout.createSequentialGroup()
                                                .addContainerGap()
                                                .addGroup(juserloginpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING)
                                                        .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING)
                                                        .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(juserloginpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(txtsectionsearch)
                                        .addComponent(txtlangaugesearch)
                                        .addComponent(txthoursearch)
                                        .addComponent(txtcrnsearch)
                                        .addComponent(txtinstructorsearch)
                                        .addComponent(txtmeetingtimes)
                                        .addComponent(txtcampussearch)
                                        .addComponent(txtonlineremotesearch)
                                        .addComponent(txtemployeeratingsearch, javax.swing.GroupLayout.DEFAULT_SIZE, 238, Short.MAX_VALUE)
                                        .addComponent(txtstudentratingsearch)
                                        .addComponent(txtcoursenumber)
                                        .addComponent(txtsubdescription)
                                        .addComponent(txttitlesearch))
                                .addGap(18, 18, 18)
                                .addComponent(addcoursebtn, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(475, Short.MAX_VALUE))
        );

        juserloginpanelLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[]{txtcampussearch, txtcoursenumber, txtcrnsearch, txtemployeeratingsearch, txthoursearch, txtinstructorsearch, txtlangaugesearch, txtmeetingtimes, txtonlineremotesearch, txtsectionsearch, txtstudentratingsearch, txtsubdescription, txttitlesearch});

        juserloginpanelLayout.setVerticalGroup(
                juserloginpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(juserloginpanelLayout.createSequentialGroup()
                                .addGroup(juserloginpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(juserloginpanelLayout.createSequentialGroup()
                                                .addGap(8, 8, 8)
                                                .addComponent(jLabel2))
                                        .addGroup(juserloginpanelLayout.createSequentialGroup()
                                                .addContainerGap()
                                                .addComponent(txttitlesearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(juserloginpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(juserloginpanelLayout.createSequentialGroup()
                                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(jLabel14))
                                        .addGroup(juserloginpanelLayout.createSequentialGroup()
                                                .addComponent(txtsubdescription, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(11, 11, 11)
                                                .addGroup(juserloginpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(txtcoursenumber, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(jLabel4))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addGroup(juserloginpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(txtsectionsearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(jLabel5))
                                                .addGap(8, 8, 8)
                                                .addGroup(juserloginpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(txtlangaugesearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(jLabel6))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(juserloginpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                        .addComponent(jLabel7)
                                                        .addComponent(txthoursearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(juserloginpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(txtcrnsearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(jLabel8))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addGroup(juserloginpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(txtinstructorsearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(jLabel9))
                                                .addGap(8, 8, 8)
                                                .addGroup(juserloginpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(txtmeetingtimes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(jLabel10))
                                                .addGroup(juserloginpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addGroup(juserloginpanelLayout.createSequentialGroup()
                                                                .addGap(35, 35, 35)
                                                                .addGroup(juserloginpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                                        .addComponent(txtonlineremotesearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                        .addComponent(jLabel12)))
                                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, juserloginpanelLayout.createSequentialGroup()
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                .addGroup(juserloginpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                                        .addComponent(txtcampussearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                        .addComponent(jLabel11))
                                                                .addGap(29, 29, 29)))
                                                .addGap(6, 6, 6)
                                                .addGroup(juserloginpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(txtemployeeratingsearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(jLabel13))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(txtstudentratingsearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(76, 76, 76))
                        .addGroup(juserloginpanelLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(addcoursebtn, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        juserloginpanelLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[]{txtcampussearch, txtcoursenumber, txtcrnsearch, txtemployeeratingsearch, txthoursearch, txtinstructorsearch, txtlangaugesearch, txtmeetingtimes, txtonlineremotesearch, txtsectionsearch, txtstudentratingsearch, txtsubdescription, txttitlesearch});

        javax.swing.GroupLayout splitWorkspaceLayout = new javax.swing.GroupLayout(splitWorkspace);
        splitWorkspace.setLayout(splitWorkspaceLayout);
        splitWorkspaceLayout.setHorizontalGroup(
                splitWorkspaceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(splitWorkspaceLayout.createSequentialGroup()
                                .addGroup(splitWorkspaceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(splitWorkspaceLayout.createSequentialGroup()
                                                .addContainerGap()
                                                .addComponent(termlbl)
                                                .addGap(18, 18, 18)
                                                .addComponent(termComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(splitWorkspaceLayout.createSequentialGroup()
                                                .addContainerGap()
                                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1960, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(splitWorkspaceLayout.createSequentialGroup()
                                                .addGap(24, 24, 24)
                                                .addGroup(splitWorkspaceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(topiclbl, javax.swing.GroupLayout.Alignment.TRAILING)
                                                        .addComponent(ProfessorName, javax.swing.GroupLayout.Alignment.TRAILING)
                                                        .addComponent(languagelbl, javax.swing.GroupLayout.Alignment.TRAILING)
                                                        .addComponent(regionlblk, javax.swing.GroupLayout.Alignment.TRAILING))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(splitWorkspaceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                        .addGroup(splitWorkspaceLayout.createSequentialGroup()
                                                                .addComponent(searchcoursebtn, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                                .addComponent(clearcoursebtn, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                        .addComponent(searchlanguage)
                                                        .addComponent(searchprofessor)
                                                        .addComponent(searchtitletxt)
                                                        .addComponent(searchregion, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGap(26, 26, 26)
                                                .addComponent(juserloginpanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addContainerGap(14, Short.MAX_VALUE))
        );
        splitWorkspaceLayout.setVerticalGroup(
                splitWorkspaceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(splitWorkspaceLayout.createSequentialGroup()
                                .addGap(17, 17, 17)
                                .addGroup(splitWorkspaceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(termlbl)
                                        .addComponent(termComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(splitWorkspaceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(splitWorkspaceLayout.createSequentialGroup()
                                                .addGap(8, 8, 8)
                                                .addGroup(splitWorkspaceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(ProfessorName)
                                                        .addComponent(searchprofessor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addGroup(splitWorkspaceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(topiclbl)
                                                        .addComponent(searchtitletxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addGroup(splitWorkspaceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(regionlblk)
                                                        .addComponent(searchregion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGap(13, 13, 13)
                                                .addGroup(splitWorkspaceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(languagelbl)
                                                        .addComponent(searchlanguage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGap(18, 18, 18)
                                                .addGroup(splitWorkspaceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(searchcoursebtn, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(clearcoursebtn, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addComponent(juserloginpanel, javax.swing.GroupLayout.PREFERRED_SIZE, 431, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap(100, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout tabPatientLayout = new javax.swing.GroupLayout(tabPatient);
        tabPatient.setLayout(tabPatientLayout);
        tabPatientLayout.setHorizontalGroup(
                tabPatientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(splitWorkspace, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        tabPatientLayout.setVerticalGroup(
                tabPatientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(splitWorkspace, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Register for Course", tabPatient);

        splitWorkspace1.setBackground(new java.awt.Color(204, 204, 204));
        splitWorkspace1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        termlbl1.setText("TERMS FOR RATING");

        ratingtable.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        ratingtable.setModel(new javax.swing.table.DefaultTableModel(
                new Object[][]{
                    {null, null, null, null, null, null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null, null, null, null, null, null}
                },
                new String[]{
                    "Title", "Subject Description", "Course Number", "Section", "Language", "Hour", "CRN", "Instructor", "Meeting Times", "Campus", "Online/Remote", "Employer Rating", "Student's Rating"
                }
        ) {
            boolean[] canEdit = new boolean[]{
                false, false, false, false, true, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit[columnIndex];
            }
        });
        ratingtable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        ratingtable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ratingtableMouseClicked(evt);
            }
        });
        ratingtable.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                ratingtableKeyPressed(evt);
            }
        });
        jScrollPane4.setViewportView(ratingtable);
        if (ratingtable.getColumnModel().getColumnCount() > 0) {
            ratingtable.getColumnModel().getColumn(0).setResizable(false);
        }

        jLabel31.setText("Title :");

        jLabel32.setText("Subject Description :");

        jLabel33.setText("Course Number :");

        jLabel37.setText("Section :");

        jLabel38.setText("Language :");

        jLabel39.setText("Instructor :");

        jLabel30.setText("Campus :");

        jLabel40.setText("Online/Remote :");

        jLabel41.setText("Rating :");

        ratingprofessor.setMaximum(5);
        ratingprofessor.setMinimum(1);
        ratingprofessor.setMinorTickSpacing(1);
        ratingprofessor.setPaintLabels(true);
        ratingprofessor.setPaintTicks(true);
        ratingprofessor.setToolTipText("");
        ratingprofessor.setValue(1);
        ratingprofessor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                ratingprofessorKeyReleased(evt);
            }
        });

        jLabel29.setText("1");

        jLabel42.setText("2");

        jLabel43.setText("3");

        jLabel44.setText("4");

        jLabel45.setText("5");

        ratingComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[]{"Fall 2023 Semester", "Spring 2024 Semester"}));
        ratingComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ratingComboBoxActionPerformed(evt);
            }
        });

        updaterating.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        updaterating.setText(">> Update Rating");
        updaterating.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        updaterating.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateratingActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout splitWorkspace1Layout = new javax.swing.GroupLayout(splitWorkspace1);
        splitWorkspace1.setLayout(splitWorkspace1Layout);
        splitWorkspace1Layout.setHorizontalGroup(
                splitWorkspace1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(splitWorkspace1Layout.createSequentialGroup()
                                .addGroup(splitWorkspace1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(splitWorkspace1Layout.createSequentialGroup()
                                                .addContainerGap()
                                                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 1968, Short.MAX_VALUE))
                                        .addGroup(splitWorkspace1Layout.createSequentialGroup()
                                                .addGroup(splitWorkspace1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addGroup(splitWorkspace1Layout.createSequentialGroup()
                                                                .addGroup(splitWorkspace1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                        .addGroup(splitWorkspace1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                                .addGroup(splitWorkspace1Layout.createSequentialGroup()
                                                                                        .addGap(96, 96, 96)
                                                                                        .addComponent(jLabel31))
                                                                                .addGroup(splitWorkspace1Layout.createSequentialGroup()
                                                                                        .addContainerGap()
                                                                                        .addComponent(jLabel32))
                                                                                .addComponent(jLabel33, javax.swing.GroupLayout.Alignment.TRAILING)
                                                                                .addComponent(jLabel37, javax.swing.GroupLayout.Alignment.TRAILING))
                                                                        .addComponent(jLabel38, javax.swing.GroupLayout.Alignment.TRAILING)
                                                                        .addComponent(jLabel39, javax.swing.GroupLayout.Alignment.TRAILING)
                                                                        .addComponent(jLabel30, javax.swing.GroupLayout.Alignment.TRAILING)
                                                                        .addComponent(jLabel40, javax.swing.GroupLayout.Alignment.TRAILING))
                                                                .addGap(18, 18, 18)
                                                                .addGroup(splitWorkspace1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                                        .addComponent(txtsectionsearch2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                        .addComponent(txtlangaugesearch2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                        .addComponent(txtinstructorsearch2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                        .addComponent(txtonlineremotesearch2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                        .addComponent(txttitlesearch2, javax.swing.GroupLayout.DEFAULT_SIZE, 238, Short.MAX_VALUE)
                                                                        .addComponent(txtcoursenumber2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                        .addComponent(txtsubdescription2)
                                                                        .addComponent(txtcampussearch2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                        .addGroup(splitWorkspace1Layout.createSequentialGroup()
                                                                .addGap(55, 55, 55)
                                                                .addComponent(termlbl1)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                                .addComponent(ratingComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                .addGap(0, 0, Short.MAX_VALUE)))
                                .addContainerGap())
                        .addGroup(splitWorkspace1Layout.createSequentialGroup()
                                .addGap(85, 85, 85)
                                .addComponent(jLabel41)
                                .addGap(18, 18, 18)
                                .addGroup(splitWorkspace1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(ratingprofessor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(splitWorkspace1Layout.createSequentialGroup()
                                                .addGap(6, 6, 6)
                                                .addComponent(jLabel29)
                                                .addGap(39, 39, 39)
                                                .addComponent(jLabel42)
                                                .addGap(38, 38, 38)
                                                .addComponent(jLabel43)
                                                .addGap(39, 39, 39)
                                                .addComponent(jLabel44)
                                                .addGap(34, 34, 34)
                                                .addComponent(jLabel45)))
                                .addGap(46, 46, 46)
                                .addComponent(updaterating, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        splitWorkspace1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[]{txtcampussearch2, txtcoursenumber2, txtinstructorsearch2, txtlangaugesearch2, txtonlineremotesearch2, txtsectionsearch2, txtsubdescription2, txttitlesearch2});

        splitWorkspace1Layout.setVerticalGroup(
                splitWorkspace1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(splitWorkspace1Layout.createSequentialGroup()
                                .addGap(34, 34, 34)
                                .addGroup(splitWorkspace1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(termlbl1)
                                        .addComponent(ratingComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(28, 28, 28)
                                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(splitWorkspace1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(txttitlesearch2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel31))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(splitWorkspace1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jLabel32)
                                        .addComponent(txtsubdescription2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(splitWorkspace1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(txtcoursenumber2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel33))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(splitWorkspace1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(txtsectionsearch2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel37))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(splitWorkspace1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(txtlangaugesearch2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel38))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(splitWorkspace1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(txtinstructorsearch2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel39))
                                .addGap(8, 8, 8)
                                .addGroup(splitWorkspace1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(txtcampussearch2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel30))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(splitWorkspace1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(txtonlineremotesearch2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel40))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(splitWorkspace1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(splitWorkspace1Layout.createSequentialGroup()
                                                .addComponent(jLabel41)
                                                .addGap(34, 34, 34))
                                        .addGroup(splitWorkspace1Layout.createSequentialGroup()
                                                .addGroup(splitWorkspace1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(ratingprofessor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(updaterating, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(splitWorkspace1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(jLabel29)
                                                        .addComponent(jLabel42)
                                                        .addComponent(jLabel43)
                                                        .addComponent(jLabel44)
                                                        .addComponent(jLabel45))))
                                .addContainerGap(233, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout tabDoctorLayout = new javax.swing.GroupLayout(tabDoctor);
        tabDoctor.setLayout(tabDoctorLayout);
        tabDoctorLayout.setHorizontalGroup(
                tabDoctorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(splitWorkspace1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        tabDoctorLayout.setVerticalGroup(
                tabDoctorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(splitWorkspace1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Rating for Professor", tabDoctor);

        splitWorkspace2.setBackground(new java.awt.Color(204, 204, 204));
        splitWorkspace2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        studentRegisteredTable.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        studentRegisteredTable.setModel(new javax.swing.table.DefaultTableModel(
                new Object[][]{
                    {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null, null, null, null, null, null, null}
                },
                new String[]{
                    "Title", "Subject Description", "Course Number", "Section", "Language", "Hour", "CRN", "Instructor", "Meeting Times", "Campus", "Online/Remote", "Employer Rating", "Student's Rating", "Grade"
                }
        ) {
            boolean[] canEdit = new boolean[]{
                false, false, false, false, true, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit[columnIndex];
            }
        });
        studentRegisteredTable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jScrollPane2.setViewportView(studentRegisteredTable);
        if (studentRegisteredTable.getColumnModel().getColumnCount() > 0) {
            studentRegisteredTable.getColumnModel().getColumn(0).setResizable(false);
        }

        jLabel15.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel15.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel15.setText("Student Transcript");

        graduateeligiblebtn.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        graduateeligiblebtn.setText("Check Graduate Eligibility");
        graduateeligiblebtn.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        graduateeligiblebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                graduateeligiblebtnActionPerformed(evt);
            }
        });

        downloaddegreebtn.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        downloaddegreebtn.setText("Download Transcript");
        downloaddegreebtn.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        downloaddegreebtn.setEnabled(false);
        downloaddegreebtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                downloaddegreebtnMouseClicked(evt);
            }
        });
        downloaddegreebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                downloaddegreebtnActionPerformed(evt);
            }
        });

        jLabel16.setText("TERM");

        dash.setModel(new javax.swing.DefaultComboBoxModel<>(new String[]{"Fall 2023", "Spring 2024", " "}));
        dash.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dashActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout splitWorkspace2Layout = new javax.swing.GroupLayout(splitWorkspace2);
        splitWorkspace2.setLayout(splitWorkspace2Layout);
        splitWorkspace2Layout.setHorizontalGroup(
                splitWorkspace2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(splitWorkspace2Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(splitWorkspace2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 1968, Short.MAX_VALUE)
                                        .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(splitWorkspace2Layout.createSequentialGroup()
                                                .addGroup(splitWorkspace2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addGroup(splitWorkspace2Layout.createSequentialGroup()
                                                                .addComponent(graduateeligiblebtn, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addGap(18, 18, 18)
                                                                .addComponent(downloaddegreebtn, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                        .addGroup(splitWorkspace2Layout.createSequentialGroup()
                                                                .addGap(46, 46, 46)
                                                                .addComponent(jLabel16)
                                                                .addGap(18, 18, 18)
                                                                .addComponent(dash, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                .addGap(0, 0, Short.MAX_VALUE)))
                                .addContainerGap())
        );
        splitWorkspace2Layout.setVerticalGroup(
                splitWorkspace2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(splitWorkspace2Layout.createSequentialGroup()
                                .addGap(22, 22, 22)
                                .addComponent(jLabel15)
                                .addGap(11, 11, 11)
                                .addGroup(splitWorkspace2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jLabel16)
                                        .addComponent(dash, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(splitWorkspace2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(downloaddegreebtn, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(graduateeligiblebtn, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap(469, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout tabHospitalLayout = new javax.swing.GroupLayout(tabHospital);
        tabHospital.setLayout(tabHospitalLayout);
        tabHospitalLayout.setHorizontalGroup(
                tabHospitalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(splitWorkspace2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        tabHospitalLayout.setVerticalGroup(
                tabHospitalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(splitWorkspace2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Dashboard", tabHospital);

        javax.swing.GroupLayout splitNavigation3Layout = new javax.swing.GroupLayout(splitNavigation3);
        splitNavigation3.setLayout(splitNavigation3Layout);
        splitNavigation3Layout.setHorizontalGroup(
                splitNavigation3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGap(0, 0, Short.MAX_VALUE)
        );
        splitNavigation3Layout.setVerticalGroup(
                splitNavigation3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGap(0, 800, Short.MAX_VALUE)
        );

        splitPaneEncounter.setLeftComponent(splitNavigation3);

        splitWorkspace3.setBackground(new java.awt.Color(204, 204, 255));

        javax.swing.GroupLayout splitWorkspace3Layout = new javax.swing.GroupLayout(splitWorkspace3);
        splitWorkspace3.setLayout(splitWorkspace3Layout);
        splitWorkspace3Layout.setHorizontalGroup(
                splitWorkspace3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGap(0, 1967, Short.MAX_VALUE)
        );
        splitWorkspace3Layout.setVerticalGroup(
                splitWorkspace3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGap(0, 800, Short.MAX_VALUE)
        );

        splitPaneEncounter.setRightComponent(splitWorkspace3);

        javax.swing.GroupLayout tabEncountersLayout = new javax.swing.GroupLayout(tabEncounters);
        tabEncounters.setLayout(tabEncountersLayout);
        tabEncountersLayout.setHorizontalGroup(
                tabEncountersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(tabEncountersLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(splitPaneEncounter)
                                .addContainerGap())
        );
        tabEncountersLayout.setVerticalGroup(
                tabEncountersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(tabEncountersLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(splitPaneEncounter)
                                .addContainerGap())
        );

        jTabbedPane1.addTab("Rough Panel", tabEncounters);

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Student Dashboard");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 1988, Short.MAX_VALUE)
                                .addContainerGap())
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                        .addContainerGap()
                                        .addComponent(jTabbedPane1)
                                        .addContainerGap()))
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(0, 2602, Short.MAX_VALUE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                        .addGap(35, 35, 35)
                                        .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 851, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addContainerGap(1738, Short.MAX_VALUE)))
        );
    }// </editor-fold>                        

    private void termComboBoxActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
        int index = termComboBox.getSelectedIndex();
        if (index == 0) {
            populateFallTable();
        } else if (index == 1) {
            populateSpringTable();
        }

//String selectedValue = termComboBox.getSelectedItem().toString();
//    if ("Value 1".equals(selectedValue)) {
//        populateFallTable();
//    } else if ("Value 2".equals(selectedValue)) {
//        //messageLabel.setText("You selected Value 2!");
//    } else if ("Value 3".equals(selectedValue)) {
//        //messageLabel.setText("You selected Value 3!");
//    } else {
//        //messageLabel.setText("");
//    }
    }

    private void graduateeligiblebtnActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:

        JOptionPane.showMessageDialog(null, "Request send to admin, you will be able to see the transcripts once admin approves", "Warning", JOptionPane.INFORMATION_MESSAGE);
//       
        transcript.setIsReady(true);

//        if (transcript.isGettranscript()) {
//            downloaddegreebtn.setEnabled(true);
//        } else {
//            downloaddegreebtn.setEnabled(false);
//        }
    }
    // TODO add your handling code here:


    private void searchcoursebtnActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:

        Course result = coursedetails.search(searchprofessor.getText(), searchtitletxt.getText(), searchregion.getText(), searchlanguage.getText());
        if (result == null) {
            JOptionPane.showMessageDialog(null, "Course Details entered doesn't exist", "Warning", JOptionPane.INFORMATION_MESSAGE);
        } else if (result != null || !juserloginpanel.isVisible()) {
            juserloginpanel.setVisible(true);
            populateSearchDetails(result);
        }
    }

    private void jTabbedPane1KeyPressed(java.awt.event.KeyEvent evt) {
        // TODO add your handling code here:
//        if (transcript.isGettranscript()) {
//            downloaddegreebtn.setEnabled(true);
//        } else {
//            downloaddegreebtn.setEnabled(false);
//        }
    }

    private void addcoursebtnActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
        arraysize = arraysize +1;
        int index = termComboBox.getSelectedIndex();
        if (index == 0) {
            String title = txttitlesearch.getText();
            String subjectDescription = txtsubdescription.getText();
            int courseNumber = Integer.parseInt(txtcoursenumber.getText());
            String section = txtsectionsearch.getText();
            String language = txtlangaugesearch.getText();
            int hours = Integer.parseInt(txthoursearch.getText());
            int crn = Integer.parseInt(txtcrnsearch.getText());
            String instructor = txtinstructorsearch.getText();
            String meetingTimes = txtmeetingtimes.getText();
            String campus = txtcampussearch.getText();
            String onlineremote = txtonlineremotesearch.getText();
            int employerrating = Integer.parseInt(txtemployeeratingsearch.getText());
            int Studentrating = Integer.parseInt(txtstudentratingsearch.getText());

            Course cs = studentregisterdetails.addFallRegisterCourses();
            //int size1 = studentregisterdetails.size();
            //System.out.print(size1);
            JOptionPane.showMessageDialog(this, "Course added in you semester for Fall 2023");

            cs.setTitle(title);
            cs.setSubjectDescription(subjectDescription);
            cs.setcourseNumber(courseNumber);
            cs.setSection(section);
            cs.setLanguage(language);
            cs.setHours(hours);
            cs.setCrn(crn);
            cs.setInstructor(instructor);
            cs.setMeetingTimes(meetingTimes);
            cs.setCampus(campus);
            cs.setOnlineremote(onlineremote);
            cs.setEmployerrating(employerrating);
            cs.setStudentrating(Studentrating);
            cs.setGrade(0);
        } else if (index == 1) {
            String title = txttitlesearch.getText();
            String subjectDescription = txtsubdescription.getText();
            int courseNumber = Integer.parseInt(txtcoursenumber.getText());
            String section = txtsectionsearch.getText();
            String language = txtlangaugesearch.getText();
            int hours = Integer.parseInt(txthoursearch.getText());
            int crn = Integer.parseInt(txtcrnsearch.getText());
            String instructor = txtinstructorsearch.getText();
            String meetingTimes = txtmeetingtimes.getText();
            String campus = txtcampussearch.getText();
            String onlineremote = txtonlineremotesearch.getText();
            int employerrating = Integer.parseInt(txtemployeeratingsearch.getText());
            int Studentrating = Integer.parseInt(txtstudentratingsearch.getText());

            Course cs = studentSpringdetails.addSpringRegisterCourses();

            JOptionPane.showMessageDialog(this, "Course added in you semester for Spring 2023");

            cs.setTitle(title);
            cs.setSubjectDescription(subjectDescription);
            cs.setcourseNumber(courseNumber);
            cs.setSection(section);
            cs.setLanguage(language);
            cs.setHours(hours);
            cs.setCrn(crn);
            cs.setInstructor(instructor);
            cs.setMeetingTimes(meetingTimes);
            cs.setCampus(campus);
            cs.setOnlineremote(onlineremote);
            cs.setEmployerrating(employerrating);
            cs.setStudentrating(Studentrating);
            cs.setGrade(0);
        }

        //        Updated Code
//         Optional<Student> s = studentRecord.getStdlist().stream().filter(data -> String.valueOf(data.getStd_username()).equals("")).findFirst();
//         Student stud = s.get();
//         stud.getCourses().add(cs);
//         
//         
//         System.out.println("Student registered courses -> "+stud.getCourses());
//         
//        DefaultTableModel model = (DefaultTableModel) studentRegisteredTable.getModel();
//        model.setRowCount(0);
//        for (Course vs : stud.getCourses()) {
//            Object[] row = new Object[13];
//            row[0] = vs;
//            row[1] = vs.getSubjectDescription();
//            row[2] = vs.getcourseNumber();
//            row[3] = vs.getSection();
//            row[4] = vs.getLanguage();
//            row[5] = vs.getHours();
//            row[6] = vs.getCrn();
//            row[7] = vs.getInstructor();
//            row[8] = vs.getMeetingTimes();
//            row[9] = vs.getCampus();
//            row[10] = vs.getOnlineremote();
//            row[11] = vs.getEmployerrating();
//            row[12] = vs.getStudentrating();
//
//            model.addRow(row);
//        }
//        Updated code end
        txttitlesearch.setText("");
        txtsubdescription.setText("");
        txtcoursenumber.setText("");
        txtsectionsearch.setText("");
        txtlangaugesearch.setText("");
        txthoursearch.setText("");
        txtcrnsearch.setText("");
        txtinstructorsearch.setText("");
        txtmeetingtimes.setText("");
        txtcampussearch.setText("");
        txtonlineremotesearch.setText("");
        txtemployeeratingsearch.setText("");
        txtstudentratingsearch.setText("");
    }

    private void jTabbedPane1MouseClicked(java.awt.event.MouseEvent evt) {
        // TODO add your handling code here:
//        if (transcript.isGettranscript()) {
//            downloaddegreebtn.setEnabled(true);
//        } else {
//            downloaddegreebtn.setEnabled(false);
//        }
    }

    private void ratingComboBoxActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
        int index = ratingComboBox.getSelectedIndex();
        if (index == 0) {
            populateFallRatingTable();
        } else if (index == 1) {
            populateSpringRatingTable();
        }
    }

    private void ratingtableMouseClicked(java.awt.event.MouseEvent evt) {
        // TODO add your handling code here:
        int selectedRow = ratingtable.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel) ratingtable.getModel();
        txttitlesearch2.setText(model.getValueAt(selectedRow, 0).toString());
        txtsubdescription2.setText(model.getValueAt(selectedRow, 1).toString());
        txtcoursenumber2.setText(model.getValueAt(selectedRow, 2).toString());
        txtsectionsearch2.setText(model.getValueAt(selectedRow, 3).toString());
        txtlangaugesearch2.setText(model.getValueAt(selectedRow, 4).toString());
        txtinstructorsearch2.setText(model.getValueAt(selectedRow, 7).toString());
        txtcampussearch2.setText(model.getValueAt(selectedRow, 9).toString());
        txtonlineremotesearch2.setText(model.getValueAt(selectedRow, 10).toString());
        try {
            String text = model.getValueAt(selectedRow, 12).toString();
            int value = Integer.parseInt(text);
            ratingprofessor.setValue(value);
        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(null, "Invalid number format");
        }
    }

    private void updateratingActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:

        DefaultTableModel model = (DefaultTableModel) ratingtable.getModel();
        int text = ratingprofessor.getValue();
        course.setStudentrating(text);
        model.setValueAt(text, ratingtable.getSelectedRow(), 12);
        JOptionPane.showMessageDialog(null, "Ratings updated");

    }

    private void ratingprofessorKeyReleased(java.awt.event.KeyEvent evt) {

        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) ratingtable.getModel();
        int text = ratingprofessor.getValue();
        course.setStudentrating(text);
        model.setValueAt(text, ratingtable.getSelectedRow(), 12);
        JOptionPane.showMessageDialog(null, "Ratings updated");
    }

    private void ratingtableKeyPressed(java.awt.event.KeyEvent evt) {
        // TODO add your handling code here:
        int selectedRow = ratingtable.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel) ratingtable.getModel();
        txttitlesearch2.setText(model.getValueAt(selectedRow, 0).toString());
        txtsubdescription2.setText(model.getValueAt(selectedRow, 1).toString());
        txtcoursenumber2.setText(model.getValueAt(selectedRow, 2).toString());
        txtsectionsearch2.setText(model.getValueAt(selectedRow, 3).toString());
        txtlangaugesearch2.setText(model.getValueAt(selectedRow, 4).toString());
        txtinstructorsearch2.setText(model.getValueAt(selectedRow, 7).toString());
        txtcampussearch2.setText(model.getValueAt(selectedRow, 9).toString());
        txtonlineremotesearch2.setText(model.getValueAt(selectedRow, 10).toString());
        try {
            String text = model.getValueAt(selectedRow, 12).toString();
            int value = Integer.parseInt(text);
            ratingprofessor.setValue(value);
        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(null, "Invalid number format");
        }
    }

    private void dashActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
        if (arraysize == 8){
            graduateeligiblebtn.setEnabled(true);
        }else{
            graduateeligiblebtn.setEnabled(false);
        }
        int index = dash.getSelectedIndex();
        if (index == 0) {
            populateFallRegisterTable();
        } else if (index == 1) {
            populateSpringRegisterTable();
        }
    }

    private void downloaddegreebtnMouseClicked(java.awt.event.MouseEvent evt) {
        // TODO add your handling code here:\

    }
    private void downloaddegreebtnActionPerformed(java.awt.event.ActionEvent evt) {                                           
        // TODO add your handling code here:
                JOptionPane.showMessageDialog(null, "Transcript Downloaded", "Warning", JOptionPane.INFORMATION_MESSAGE);

        downloadTable();
    } 

    private void jTabbedPane1KeyReleased(java.awt.event.KeyEvent evt) {
        // TODO add your handling code here:
//        if (transcript.isGettranscript()) {
//            downloaddegreebtn.setEnabled(true);
//        } else {
//            downloaddegreebtn.setEnabled(false);
//        }
    }

    private void jTabbedPane1KeyTyped(java.awt.event.KeyEvent evt) {
        // TODO add your handling code here:
//        if (transcript.isGettranscript()) {
//            downloaddegreebtn.setEnabled(true);
//        } else {
//            downloaddegreebtn.setEnabled(false);
//        }
    }

    // Variables declaration - do not modify                     
    private javax.swing.JLabel ProfessorName;
    private javax.swing.JButton addcoursebtn;
    private javax.swing.JButton clearcoursebtn;
    private javax.swing.JTable courseRegisterTable;
    private javax.swing.JComboBox<String> dash;
    private javax.swing.JButton downloaddegreebtn;
    private javax.swing.JButton graduateeligiblebtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JPanel juserloginpanel;
    private javax.swing.JLabel languagelbl;
    private javax.swing.JComboBox<String> ratingComboBox;
    private javax.swing.JSlider ratingprofessor;
    private javax.swing.JTable ratingtable;
    private javax.swing.JLabel regionlblk;
    private javax.swing.JButton searchcoursebtn;
    private javax.swing.JTextField searchlanguage;
    private javax.swing.JTextField searchprofessor;
    private javax.swing.JTextField searchregion;
    private javax.swing.JTextField searchtitletxt;
    private javax.swing.JPanel splitNavigation3;
    private javax.swing.JSplitPane splitPaneEncounter;
    private javax.swing.JPanel splitWorkspace;
    private javax.swing.JPanel splitWorkspace1;
    private javax.swing.JPanel splitWorkspace2;
    private javax.swing.JPanel splitWorkspace3;
    private javax.swing.JTable studentRegisteredTable;
    private javax.swing.JPanel tabDoctor;
    private javax.swing.JPanel tabEncounters;
    private javax.swing.JPanel tabHospital;
    private javax.swing.JPanel tabPatient;
    private javax.swing.JComboBox<String> termComboBox;
    private javax.swing.JLabel termlbl;
    private javax.swing.JLabel termlbl1;
    private javax.swing.JLabel topiclbl;
    private javax.swing.JTextField txtcampussearch;
    private javax.swing.JTextField txtcampussearch2;
    private javax.swing.JTextField txtcoursenumber;
    private javax.swing.JTextField txtcoursenumber2;
    private javax.swing.JTextField txtcrnsearch;
    private javax.swing.JTextField txtemployeeratingsearch;
    private javax.swing.JTextField txthoursearch;
    private javax.swing.JTextField txtinstructorsearch;
    private javax.swing.JTextField txtinstructorsearch2;
    private javax.swing.JTextField txtlangaugesearch;
    private javax.swing.JTextField txtlangaugesearch2;
    private javax.swing.JTextField txtmeetingtimes;
    private javax.swing.JTextField txtonlineremotesearch;
    private javax.swing.JTextField txtonlineremotesearch2;
    private javax.swing.JTextField txtsectionsearch;
    private javax.swing.JTextField txtsectionsearch2;
    private javax.swing.JTextField txtstudentratingsearch;
    private javax.swing.JTextField txtsubdescription;
    private javax.swing.JTextField txtsubdescription2;
    private javax.swing.JTextField txttitlesearch;
    private javax.swing.JTextField txttitlesearch2;
    private javax.swing.JButton updaterating;
    // End of variables declaration                   

    private void populateFallTable() {

        DefaultTableModel model = (DefaultTableModel) courseRegisterTable.getModel();
        model.setRowCount(0);
        for (Course vs : coursedetails.getCourseList()) {
            Object[] row = new Object[13];
            row[0] = vs;
            row[1] = vs.getSubjectDescription();
            row[2] = vs.getcourseNumber();
            row[3] = vs.getSection();
            row[4] = vs.getLanguage();
            row[5] = vs.getHours();
            row[6] = vs.getCrn();
            row[7] = vs.getInstructor();
            row[8] = vs.getMeetingTimes();
            row[9] = vs.getCampus();
            row[10] = vs.getOnlineremote();
            row[11] = vs.getEmployerrating();
            row[12] = vs.getStudentrating();

            model.addRow(row);
        }

    }

    private void tableSetSize() {

        courseRegisterTable.getColumnModel().getColumn(0).setPreferredWidth(50);
        courseRegisterTable.getColumnModel().getColumn(1).setPreferredWidth(200);
        courseRegisterTable.getColumnModel().getColumn(2).setPreferredWidth(110);
        courseRegisterTable.getColumnModel().getColumn(3).setPreferredWidth(65);
//        section
        courseRegisterTable.getColumnModel().getColumn(4).setPreferredWidth(70);
        courseRegisterTable.getColumnModel().getColumn(5).setPreferredWidth(60);
        courseRegisterTable.getColumnModel().getColumn(6).setPreferredWidth(50);
        courseRegisterTable.getColumnModel().getColumn(7).setPreferredWidth(170);
//     instructor
        courseRegisterTable.getColumnModel().getColumn(8).setPreferredWidth(150);
        courseRegisterTable.getColumnModel().getColumn(9).setPreferredWidth(80);
        courseRegisterTable.getColumnModel().getColumn(10).setPreferredWidth(120);
//        online
        courseRegisterTable.getColumnModel().getColumn(11).setPreferredWidth(120);
        courseRegisterTable.getColumnModel().getColumn(12).setPreferredWidth(120);

        studentRegisteredTable.getColumnModel().getColumn(0).setPreferredWidth(50);
        studentRegisteredTable.getColumnModel().getColumn(1).setPreferredWidth(130);
        studentRegisteredTable.getColumnModel().getColumn(2).setPreferredWidth(110);
        studentRegisteredTable.getColumnModel().getColumn(3).setPreferredWidth(65);
//        section
        studentRegisteredTable.getColumnModel().getColumn(4).setPreferredWidth(70);
        studentRegisteredTable.getColumnModel().getColumn(5).setPreferredWidth(60);
        studentRegisteredTable.getColumnModel().getColumn(6).setPreferredWidth(50);
        studentRegisteredTable.getColumnModel().getColumn(7).setPreferredWidth(150);
//     instructor
        studentRegisteredTable.getColumnModel().getColumn(8).setPreferredWidth(140);
        studentRegisteredTable.getColumnModel().getColumn(9).setPreferredWidth(90);
        studentRegisteredTable.getColumnModel().getColumn(10).setPreferredWidth(120);
//        online
        studentRegisteredTable.getColumnModel().getColumn(11).setPreferredWidth(120);
        studentRegisteredTable.getColumnModel().getColumn(12).setPreferredWidth(120);
        studentRegisteredTable.getColumnModel().getColumn(13).setPreferredWidth(70);

        //**********************************************************************************
        ratingtable.getColumnModel().getColumn(0).setPreferredWidth(50);
        ratingtable.getColumnModel().getColumn(1).setPreferredWidth(200);
        ratingtable.getColumnModel().getColumn(2).setPreferredWidth(110);
        ratingtable.getColumnModel().getColumn(3).setPreferredWidth(65);
//        section
        ratingtable.getColumnModel().getColumn(4).setPreferredWidth(70);
        ratingtable.getColumnModel().getColumn(5).setPreferredWidth(60);
        ratingtable.getColumnModel().getColumn(6).setPreferredWidth(50);
        ratingtable.getColumnModel().getColumn(7).setPreferredWidth(170);
//     instructor
        ratingtable.getColumnModel().getColumn(8).setPreferredWidth(150);
        ratingtable.getColumnModel().getColumn(9).setPreferredWidth(80);
        ratingtable.getColumnModel().getColumn(10).setPreferredWidth(120);
//        online
        ratingtable.getColumnModel().getColumn(11).setPreferredWidth(120);
        ratingtable.getColumnModel().getColumn(12).setPreferredWidth(120);

    }

    private void populateSearchDetails(Course result) {
        txttitlesearch.setText(result.getTitle());
        txtsubdescription.setText(result.getSubjectDescription());
        txtcoursenumber.setText(String.valueOf(result.getcourseNumber()));
        txtsectionsearch.setText(result.getSection());
        txtlangaugesearch.setText(result.getLanguage());
        txthoursearch.setText(String.valueOf(result.getHours()));
        txtcrnsearch.setText(String.valueOf(result.getCrn()));
        txtinstructorsearch.setText(result.getInstructor());
        txtmeetingtimes.setText(result.getMeetingTimes());
        txtcampussearch.setText(result.getCampus());
        txtonlineremotesearch.setText(result.getOnlineremote());
        txtemployeeratingsearch.setText(String.valueOf(result.getEmployerrating()));
        txtstudentratingsearch.setText(String.valueOf(result.getStudentrating()));
    }

    private void populateFallRegisterTable() {
        DefaultTableModel model1 = (DefaultTableModel) studentRegisteredTable.getModel();
        model1.setRowCount(0);
        for (Course vs : studentregisterdetails.getStudentregisterdetails()) {
            Object[] row = new Object[14];
            row[0] = vs;
            row[1] = vs.getSubjectDescription();
            row[2] = vs.getcourseNumber();
            row[3] = vs.getSection();
            row[4] = vs.getLanguage();
            row[5] = vs.getHours();
            row[6] = vs.getCrn();
            row[7] = vs.getInstructor();
            row[8] = vs.getMeetingTimes();
            row[9] = vs.getCampus();
            row[10] = vs.getOnlineremote();
            row[11] = vs.getEmployerrating();
            row[12] = vs.getStudentrating();
            row[13] = vs.getGrade();
            model1.addRow(row);
        }

    }

    private void populateSpringRegisterTable() {
        DefaultTableModel model1 = (DefaultTableModel) studentRegisteredTable.getModel();
        model1.setRowCount(0);
        for (Course vs : studentSpringdetails.getStudentSpringdetails()) {
            Object[] row = new Object[14];
            row[0] = vs;
            row[1] = vs.getSubjectDescription();
            row[2] = vs.getcourseNumber();
            row[3] = vs.getSection();
            row[4] = vs.getLanguage();
            row[5] = vs.getHours();
            row[6] = vs.getCrn();
            row[7] = vs.getInstructor();
            row[8] = vs.getMeetingTimes();
            row[9] = vs.getCampus();
            row[10] = vs.getOnlineremote();
            row[11] = vs.getEmployerrating();
            row[12] = vs.getStudentrating();
            row[13] = vs.getGrade();
            model1.addRow(row);
        }

    }

    private void populateFallRatingTable() {
        DefaultTableModel model = (DefaultTableModel) ratingtable.getModel();
        model.setRowCount(0);
        for (Course vs : coursedetails.getCoursedetails()) {
            Object[] row = new Object[13];
            row[0] = vs;
            row[1] = vs.getSubjectDescription();
            row[2] = vs.getcourseNumber();
            row[3] = vs.getSection();
            row[4] = vs.getLanguage();
            row[5] = vs.getHours();
            row[6] = vs.getCrn();
            row[7] = vs.getInstructor();
            row[8] = vs.getMeetingTimes();
            row[9] = vs.getCampus();
            row[10] = vs.getOnlineremote();
            row[11] = vs.getEmployerrating();
            row[12] = vs.getStudentrating();

            model.addRow(row);
        }
    }

    private void populateSpringRatingTable() {
        DefaultTableModel model = (DefaultTableModel) ratingtable.getModel();
        model.setRowCount(0);
        for (Course vs : courseSpringdetails.getCourseSpringdetails()) {
            Object[] row = new Object[13];
            row[0] = vs;
            row[1] = vs.getSubjectDescription();
            row[2] = vs.getcourseNumber();
            row[3] = vs.getSection();
            row[4] = vs.getLanguage();
            row[5] = vs.getHours();
            row[6] = vs.getCrn();
            row[7] = vs.getInstructor();
            row[8] = vs.getMeetingTimes();
            row[9] = vs.getCampus();
            row[10] = vs.getOnlineremote();
            row[11] = vs.getEmployerrating();
            row[12] = vs.getStudentrating();

            model.addRow(row);
        }
    }

    private void populateSpringTable() {
        DefaultTableModel model = (DefaultTableModel) courseRegisterTable.getModel();
        model.setRowCount(0);
        for (Course vs : courseSpringdetails.getCourseSpringdetails()) {
            Object[] row = new Object[13];
            row[0] = vs;
            row[1] = vs.getSubjectDescription();
            row[2] = vs.getcourseNumber();
            row[3] = vs.getSection();
            row[4] = vs.getLanguage();
            row[5] = vs.getHours();
            row[6] = vs.getCrn();
            row[7] = vs.getInstructor();
            row[8] = vs.getMeetingTimes();
            row[9] = vs.getCampus();
            row[10] = vs.getOnlineremote();
            row[11] = vs.getEmployerrating();
            row[12] = vs.getStudentrating();

            model.addRow(row);
        }
    }

    private void downloadTable() {
        JFileChooser fileChooser = new JFileChooser();
        int returnValue = fileChooser.showSaveDialog(this);

        if (returnValue == JFileChooser.APPROVE_OPTION) {
            try {
                String filePath = fileChooser.getSelectedFile().getAbsolutePath() + ".csv";
                DefaultTableModel model = (DefaultTableModel) studentRegisteredTable.getModel();
                int rowCount = model.getRowCount();
                int colCount = model.getColumnCount();

                // Write table data to the selected CSV file
                try (java.io.PrintWriter writer = new java.io.PrintWriter(new java.io.File(filePath))) {
                    for (int col = 0; col < colCount; col++) {
                        writer.print(model.getColumnName(col));
                        if (col < colCount - 1) {
                            writer.print(",");
                        }
                    }
                    writer.println();

                    for (int row = 0; row < rowCount; row++) {
                        for (int col = 0; col < colCount; col++) {
                            writer.print(model.getValueAt(row, col));
                            if (col < colCount - 1) {
                                writer.print(",");
                            }
                        }
                        writer.println();
                    }
                }

                JOptionPane.showMessageDialog(this, "Table data downloaded successfully.");
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "An error occurred: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }

}
